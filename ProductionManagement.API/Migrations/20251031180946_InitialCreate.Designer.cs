// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductionManagement.API.Data;

#nullable disable

namespace ProductionManagement.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251031180946_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductionManagement.API.Models.Acquisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceivedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierContact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId1")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TotalActualCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalEstimatedCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TransportDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<string>("TransportNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ReceivedByUserId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("SupplierId1");

                    b.HasIndex("TransportId");

                    b.ToTable("Acquisitions");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.AcquisitionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcquisitionId")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Changes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionId");

                    b.HasIndex("UserId");

                    b.ToTable("AcquisitionHistories");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.AcquisitionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcquisitionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ActualUnitCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuantityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("AcquisitionItems");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransportDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<string>("TransportNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TransportId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.OrderMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialColor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuantityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("OrderMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProcessedMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcquisitionId")
                        .HasColumnType("int");

                    b.Property<int>("AcquisitionItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionId");

                    b.HasIndex("AcquisitionItemId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("ProcessedMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedProductionTimeMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialColor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("QuantityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RequiredQuantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedProductionTimeMinutes")
                        .HasColumnType("int");

                    b.Property<int>("FinishedProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinishedProductId")
                        .IsUnique();

                    b.ToTable("ProductTemplates");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductTemplateMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal>("RequiredQuantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTemplateId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("ProductTemplateMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ActualProductionTimeMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompletedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstimatedProductionTimeMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("QuantityToProduce")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TargetProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompletedByUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("StartedByUserId");

                    b.HasIndex("TargetProductId");

                    b.ToTable("ProductionPlans");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductionPlanMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualQuantityUsed")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ActualUnitCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedUnitCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductionPlanId")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<decimal>("RequiredQuantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductionPlanId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("ProductionPlanMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.RawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumStock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuantityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RawMaterials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Silver",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-grade steel sheets for manufacturing",
                            IsActive = true,
                            MinimumStock = 50m,
                            Name = "Steel Sheets",
                            Quantity = 150.5m,
                            QuantityType = "kg",
                            Type = 0,
                            UnitCost = 2.50m,
                            UpdatedAt = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Color = "Silver",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "6mm aluminum rods",
                            IsActive = true,
                            MinimumStock = 20m,
                            Name = "Aluminum Rods",
                            Quantity = 75m,
                            QuantityType = "pieces",
                            Type = 0,
                            UnitCost = 15.00m,
                            UpdatedAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Color = "Blue",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-quality blue paint",
                            IsActive = true,
                            MinimumStock = 10m,
                            Name = "Paint",
                            Quantity = 25.8m,
                            QuantityType = "liters",
                            Type = 0,
                            UnitCost = 12.00m,
                            UpdatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Description = "Full system access with all permissions",
                            IsSystemRole = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Description = "Manage operations without user administration",
                            IsSystemRole = true,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Description = "Basic access with view-only permissions",
                            IsSystemRole = true,
                            Name = "User"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Description = "Supervise production and inventory, limited administrative access",
                            IsSystemRole = false,
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Description = "Manage inventory and acquisitions only",
                            IsSystemRole = false,
                            Name = "Warehouse Operator"
                        });
                });

            modelBuilder.Entity("ProductionManagement.API.Models.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Role", "Permission")
                        .IsUnique();

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.ViewTab",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Create",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.View",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Edit",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Cancel",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Receive",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Process",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.ViewTab",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Add",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Edit",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.View",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Deactivate",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Activate",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.ViewTab",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Create",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Edit",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.View",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Cancel",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Execute",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Receive",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.ViewTab",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Create",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Edit",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.View",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Cancel",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Process",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Users.ViewTab",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Users.Create",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Users.Edit",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Users.View",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Users.Deactivate",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Users.Activate",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Roles.ViewTab",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Roles.ManagePermissions",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.ViewTab",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Create",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.View",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Edit",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Cancel",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Receive",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Process",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.ViewTab",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Add",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Edit",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.View",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Deactivate",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Activate",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.ViewTab",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Create",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Edit",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.View",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Cancel",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Execute",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Receive",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.ViewTab",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Create",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Edit",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.View",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Cancel",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Process",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.ViewTab",
                            Role = "User"
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.View",
                            Role = "User"
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.ViewTab",
                            Role = "User"
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.View",
                            Role = "User"
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.ViewTab",
                            Role = "User"
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.View",
                            Role = "User"
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.ViewTab",
                            Role = "User"
                        },
                        new
                        {
                            Id = 68,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.View",
                            Role = "User"
                        },
                        new
                        {
                            Id = 69,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.ViewTab",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 70,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Create",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 71,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.View",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 72,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Edit",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 73,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Cancel",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 74,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Receive",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 75,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Process",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 76,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.ViewTab",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 77,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Add",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 78,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Edit",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 79,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.View",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 80,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Deactivate",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 81,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Activate",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 82,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.ViewTab",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 83,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Create",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 84,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Edit",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 85,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.View",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 86,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Cancel",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 87,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Execute",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 88,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Production.Receive",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 89,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.ViewTab",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 90,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Create",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 91,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Edit",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 92,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.View",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 93,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Cancel",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 94,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Orders.Process",
                            Role = "Supervisor"
                        },
                        new
                        {
                            Id = 95,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.ViewTab",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 96,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Create",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 97,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.View",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 98,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Edit",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 99,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Cancel",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 100,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Receive",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Acquisitions.Process",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.ViewTab",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 103,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Add",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 104,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Edit",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 105,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.View",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 106,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Deactivate",
                            Role = "Warehouse Operator"
                        },
                        new
                        {
                            Id = 107,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreatedByUserId = "System",
                            Permission = "Inventory.Activate",
                            Role = "Warehouse Operator"
                        });
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveEmails")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@productionmanagement.com",
                            FirstName = "Admin",
                            IsActive = true,
                            LastLoginAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "User",
                            PasswordHash = "JAvlGPq9JyTdtvBO6x2llnRI1+gxwIyPqCKAn3THIKk=",
                            ReceiveEmails = true,
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Acquisition", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductionManagement.API.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.User", "ReceivedBy")
                        .WithMany()
                        .HasForeignKey("ReceivedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductionManagement.API.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductionManagement.API.Models.Supplier", null)
                        .WithMany("Acquisitions")
                        .HasForeignKey("SupplierId1");

                    b.HasOne("ProductionManagement.API.Models.Transport", "Transport")
                        .WithMany("Acquisitions")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("ReceivedBy");

                    b.Navigation("Supplier");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.AcquisitionHistory", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.Acquisition", "Acquisition")
                        .WithMany("History")
                        .HasForeignKey("AcquisitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Acquisition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.AcquisitionItem", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.Acquisition", "Acquisition")
                        .WithMany("Items")
                        .HasForeignKey("AcquisitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "RawMaterial")
                        .WithMany()
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Acquisition");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Order", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.Transport", "Transport")
                        .WithMany("Orders")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.OrderMaterial", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.Order", "Order")
                        .WithMany("OrderMaterials")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "RawMaterial")
                        .WithMany()
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProcessedMaterial", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.Acquisition", "Acquisition")
                        .WithMany("ProcessedMaterials")
                        .HasForeignKey("AcquisitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.AcquisitionItem", "AcquisitionItem")
                        .WithMany()
                        .HasForeignKey("AcquisitionItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "RawMaterial")
                        .WithMany()
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Acquisition");

                    b.Navigation("AcquisitionItem");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductMaterial", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.RawMaterial", null)
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.Product", null)
                        .WithMany("RequiredMaterials")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductTemplate", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "FinishedProduct")
                        .WithMany()
                        .HasForeignKey("FinishedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinishedProduct");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductTemplateMaterial", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.ProductTemplate", "ProductTemplate")
                        .WithMany("RequiredMaterials")
                        .HasForeignKey("ProductTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "RawMaterial")
                        .WithMany()
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductTemplate");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductionPlan", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.User", "CompletedByUser")
                        .WithMany()
                        .HasForeignKey("CompletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductionManagement.API.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.User", "StartedByUser")
                        .WithMany()
                        .HasForeignKey("StartedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "TargetProduct")
                        .WithMany()
                        .HasForeignKey("TargetProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CompletedByUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("StartedByUser");

                    b.Navigation("TargetProduct");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductionPlanMaterial", b =>
                {
                    b.HasOne("ProductionManagement.API.Models.ProductionPlan", "ProductionPlan")
                        .WithMany("RequiredMaterials")
                        .HasForeignKey("ProductionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductionManagement.API.Models.RawMaterial", "RawMaterial")
                        .WithMany()
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductionPlan");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Acquisition", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Items");

                    b.Navigation("ProcessedMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Order", b =>
                {
                    b.Navigation("OrderMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Product", b =>
                {
                    b.Navigation("RequiredMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductTemplate", b =>
                {
                    b.Navigation("RequiredMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.ProductionPlan", b =>
                {
                    b.Navigation("RequiredMaterials");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Supplier", b =>
                {
                    b.Navigation("Acquisitions");
                });

            modelBuilder.Entity("ProductionManagement.API.Models.Transport", b =>
                {
                    b.Navigation("Acquisitions");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
